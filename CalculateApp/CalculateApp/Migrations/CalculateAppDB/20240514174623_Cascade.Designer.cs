// <auto-generated />
using CalculateApp.Data.CalculateApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalculateApp.Migrations.CalculateAppDB
{
    [DbContext(typeof(CalculateAppDBContext))]
    [Migration("20240514174623_Cascade")]
    partial class Cascade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC0724B3DB52");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__737584F68D1E8014")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Characte__3214EC07716DB7FF");

                    b.HasIndex("ProductId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Estimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Estimate__3214EC07413F7143");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC07FDD1422B");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.ProductsEstimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("EstimateId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC0767DE9963");

                    b.HasIndex("EstimateId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsEstimates");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Lenght")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Rooms__3214EC07922E89A8");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Characteristic", b =>
                {
                    b.HasOne("CalculateApp.Data.CalculateApp.Product", "Product")
                        .WithMany("Characteristics")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Character__Produ__3D5E1FD2");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Product", b =>
                {
                    b.HasOne("CalculateApp.Data.CalculateApp.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__3A81B327");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.ProductsEstimate", b =>
                {
                    b.HasOne("CalculateApp.Data.CalculateApp.Estimate", "Estimate")
                        .WithMany("ProductsEstimates")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductsE__Estim__60A75C0F");

                    b.HasOne("CalculateApp.Data.CalculateApp.Product", "Product")
                        .WithMany("ProductsEstimates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductsE__Produ__5FB337D6");

                    b.Navigation("Estimate");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Estimate", b =>
                {
                    b.Navigation("ProductsEstimates");
                });

            modelBuilder.Entity("CalculateApp.Data.CalculateApp.Product", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("ProductsEstimates");
                });
#pragma warning restore 612, 618
        }
    }
}
